{"version":3,"sources":["components/Sidebar/Sidebar.jsx","components/Navbar/Navbar.jsx","playgrounds/TicTacToe/components/Square.jsx","playgrounds/TicTacToe/components/Board.jsx","playgrounds/TicTacToe/TicTacToe.jsx","playgrounds/Calculator/components/CalculatorKey/CalculatorKey.jsx","playgrounds/Calculator/components/AutoScalingText/AutoScalingText.jsx","playgrounds/Calculator/Calculator.jsx","playgrounds/EmojiSearch/components/EmojiList.jsx","playgrounds/EmojiSearch/components/Spinner.jsx","playgrounds/EmojiSearch/components/EmojiSearchBar.jsx","playgrounds/EmojiSearch/EmojiSearch.jsx","components/PlaygroundContainer/PlaygroundContainer.jsx","components/PlaygroundsContainer/PlaygroundsContainer.jsx","components/PageContentContainer/PageContentContainer.jsx","App.js","reportWebVitals.js","index.js"],"names":["Sidebar","props","className","id","href","Navbar","Square","onClick","click","value","React","memo","Board","i","this","squares","renderSquare","Component","calculateWinner","lines","length","a","b","c","TicTacToe","_clickHandler","history","state","slice","stepNumber","xIsNext","setState","concat","_jumpToHandler","step","_restartHandler","Array","fill","status","current","winner","moves","map","move","desc","disabled","CalculatorKey","name","operator","AutoScalingText","scale","availableRef","createRef","actualRef","actualScale","offsetWidth","displayValue","includes","splitValue","split","replace","ref","type","onChange","changed","style","transform","Calculator","_onchangeHandler","e","target","test","pop","_onClickHandler","currentValue","previousValue","reset","functionKeys","find","element","result","parseFloat","substring","toString","digitKeys","operatorKeys","prevNumber","currentNumber","needByPass","Math","pow","cancelButton","EmojiList","emojiList","emoji","character","unicodeName","navigator","clipboard","writeText","console","log","Spinner","EmojiSearchBar","placeholder","aria-label","aria-describedby","search","isLoaded","EmojiSearch","_searchOnchangeHandler","keyword","accessKey","emojiSearchUrl","error","searched","searchResult","_searchClickHandler","bind","preventDefault","searchUrl","fetch","searchRes","json","emojiNotFound","textAlign","fontSize","PlaygroundContainer","notesToggle","_notesToggleHandler","size","children","lastUpdate","PlaygroundsContainer","playgrounds","playground","PageContentContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce018906.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Sidebar = (props) => {\r\n\r\n    const sidebarClasses = \"navbar-nav bg-gradient-primary sidebar sidebar-dark accordion\";\r\n\r\n    return (\r\n        <ul className={sidebarClasses} id=\"accordionSidebar\">\r\n            <a className=\"sidebar-brand d-flex align-items-center justify-content-center\" href=\"/\">\r\n                <div className=\"sidebar-brand-icon rotate-n-15\">\r\n                    <i className=\"fas fa-laugh-wink\"/>\r\n                </div>\r\n                <div className=\"sidebar-brand-text mx-3\">ANDY'S PLAYGROUND</div>\r\n            </a>\r\n\r\n            <hr className=\"sidebar-divider my-0\"/>\r\n\r\n            <li className=\"nav-item active\">\r\n                <a className=\"nav-link\" href=\"/\">\r\n                    <i className=\"fas fa-fw fa-umbrella-beach\"/>\r\n                    <span>Playground</span></a>\r\n            </li>\r\n\r\n            <div className=\"text-center d-none d-md-inline\">\r\n                <button\r\n                    className=\"rounded-circle border-0\"\r\n                    id=\"sidebarToggle\"/>\r\n            </div>\r\n\r\n            <div className=\"sidebar-card d-none d-lg-flex\">\r\n                <i className=\"fas fa-wrench fa-2x\"/>\r\n                <p className=\"text-center mb-2\"><strong>This site is under construction</strong></p>\r\n            </div>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default Sidebar;","import React from 'react';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n            <button id=\"sidebarToggleTop\" className=\"btn btn-link d-md-none rounded-circle mr-3\">\r\n                <i className=\"fa fa-bars\"/>\r\n            </button>\r\n\r\n            <ul className=\"navbar-nav ml-auto\">\r\n                <li className=\"nav-item\">\r\n                    <span className=\"mr-2 d-none d-lg-inline text-gray-600 small\">Andy J</span>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default Navbar;","import React from 'react';\r\n\r\nconst Square = (props) => {\r\n    return (\r\n        <button\r\n            className=\"square\"\r\n            onClick={props.click}>\r\n            {props.value}\r\n        </button>\r\n    )\r\n};\r\n\r\nexport default React.memo(Square);","import React from 'react';\r\nimport Square from \"./Square\";\r\n\r\nclass Board extends React.Component {\r\n\r\n    renderSquare(i) {\r\n        return (\r\n            <Square\r\n                value={this.props.squares[i]}\r\n                click={() => this.props.click(i)}/>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(0)}\r\n                    {this.renderSquare(1)}\r\n                    {this.renderSquare(2)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(3)}\r\n                    {this.renderSquare(4)}\r\n                    {this.renderSquare(5)}\r\n                </div>\r\n                <div className=\"board-row\">\r\n                    {this.renderSquare(6)}\r\n                    {this.renderSquare(7)}\r\n                    {this.renderSquare(8)}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Board;","import React, {Component} from 'react';\r\nimport './tictactoe.css';\r\nimport Board from \"./components/Board\";\r\n\r\nclass TicTacToe extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        };\r\n    }\r\n\r\n    _clickHandler = (i) => {\r\n        const history = this.state.history.slice(0, this.state.stepNumber + 1);\r\n        const current = history[history.length - 1];\r\n        const squares = current.squares.slice();\r\n        if (calculateWinner(squares) || squares[i]) {\r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            history: history.concat([{\r\n                squares: squares,\r\n            }]),\r\n            stepNumber: history.length,\r\n            xIsNext: !this.state.xIsNext\r\n        })\r\n    };\r\n\r\n    _jumpToHandler = (step) => {\r\n        this.setState({\r\n            stepNumber: step,\r\n            xIsNext: (step % 2) === 0,\r\n        })\r\n    };\r\n\r\n    _restartHandler = () => {\r\n        if (this.state.stepNumber === 0) {\r\n            return;\r\n        }\r\n\r\n        this.setState({\r\n            history: [{\r\n                squares: Array(9).fill(null),\r\n            }],\r\n            stepNumber: 0,\r\n            xIsNext: true\r\n        })\r\n    };\r\n\r\n    render() {\r\n        const history = this.state.history;\r\n        const current = history[this.state.stepNumber];\r\n        const winner = calculateWinner(current.squares);\r\n\r\n        const moves = history.map((step, move) => {\r\n            const desc = move ?\r\n                'Go to move #' + move :\r\n                'Go to game start';\r\n            return (\r\n                <li key={move}>\r\n                    <button onClick={() => this._jumpToHandler(move)}>{desc}</button>\r\n                </li>\r\n            );\r\n        });\r\n\r\n        let status;\r\n        if (winner) {\r\n            status = 'Winner: ' + winner;\r\n        } else {\r\n            status = \"Next player: \" + (this.state.xIsNext ? 'X' : 'O');\r\n        }\r\n\r\n        return (\r\n            <div className=\"tic-tac-toe\">\r\n                <div className=\"game\">\r\n                    <div className=\"game-board\">\r\n                        <Board\r\n                            squares={current.squares}\r\n                            click={this._clickHandler}/>\r\n                    </div>\r\n                    <div className=\"game-info\">\r\n                        <div>\r\n                            {status}\r\n                        </div>\r\n                        <ol>\r\n                            {moves}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                <br/>\r\n                {\r\n                    this.state.stepNumber === 0 ?\r\n                        <button\r\n                            onClick={this._restartHandler}\r\n                            className=\"btn btn-secondary\" disabled={true}>Restart</button> :\r\n                        <button\r\n                            onClick={this._restartHandler}\r\n                            className=\"btn btn-danger\">Restart</button>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nfunction calculateWinner(squares) {\r\n    const lines = [\r\n        [0, 1, 2],\r\n        [3, 4, 5],\r\n        [6, 7, 8],\r\n        [0, 3, 6],\r\n        [1, 4, 7],\r\n        [2, 5, 8],\r\n        [0, 4, 8],\r\n        [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        const [a, b, c] = lines[i];\r\n        if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n            return squares[a];\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\nexport default TicTacToe;","import React from 'react';\r\n\r\nconst CalculatorKey = (props) => {\r\n    return (\r\n        <button\r\n            className={`calculator-key ${props.className ? props.className : ''}`}\r\n            name={props.operator}\r\n            onClick={props.click}>\r\n            {props.operator}\r\n        </button>\r\n    )\r\n};\r\n\r\n// Uses react memo to prevent unnecessary re-rendering of every keys\r\nexport default React.memo(CalculatorKey);","import React, { Component } from 'react';\r\n\r\nclass AutoScalingText extends Component {\r\n\r\n    state = {\r\n        scale: 1,\r\n        availableRef: React.createRef(),\r\n        actualRef: React.createRef()\r\n    };\r\n\r\n    // When text updated\r\n    // Scale current div container based on it's calculated ratio\r\n    componentDidUpdate() {\r\n        const { scale } = this.state;\r\n\r\n        // Calculating ratio using outer div and inner div\r\n        const availableWidth = this.state.availableRef.current.offsetWidth;\r\n        const actualWidth = this.state.actualRef.current.offsetWidth;\r\n        const actualScale = availableWidth / actualWidth;\r\n\r\n        if (scale === actualScale) {\r\n            return;\r\n        }\r\n\r\n        // Scale up or down the inner div based on calculated ratio\r\n        if (actualScale < 1) {\r\n            this.setState({scale: actualScale});\r\n        } else if (scale < 1) {\r\n            this.setState({ scale: 1});\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { scale } = this.state;\r\n\r\n        // Put comma for display value\r\n        let displayValue = this.props.value;\r\n        if (displayValue.includes(\".\")) {\r\n            const splitValue = displayValue.split(\".\");\r\n            const valueOne = splitValue[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n            displayValue = valueOne + \".\" + splitValue[1];\r\n        } else {\r\n            displayValue = displayValue.replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n        }\r\n\r\n        return (\r\n            <div ref={this.state.availableRef} className=\"calculator-display\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={this.props.value}\r\n                    onChange={this.props.changed}/>\r\n                <div\r\n                    className=\"auto-scaling-text\"\r\n                    style={{transform: `scale(${scale}, ${scale})`}}\r\n                     ref={this.state.actualRef}>{displayValue}</div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AutoScalingText;","import './calculator.css';\r\nimport React from 'react';\r\n\r\nimport CalculatorKey from \"./components/CalculatorKey/CalculatorKey\";\r\nimport AutoScalingText from \"./components/AutoScalingText/AutoScalingText\";\r\n\r\nclass Calculator extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            value: '0',\r\n            previousValue: null,\r\n            operator: null,\r\n            reset: false,\r\n            functionKeys: [\r\n                {operator: \"±\", className: \"key-sign col-4\"},\r\n                {operator: \"%\", className: \"key-percent col-4\"},\r\n            ],\r\n            digitKeys: [\r\n                {operator: \"0\", className: \"key-0 col-8\"},\r\n                {operator: \"●\", className: \"key-dot col-4\"},\r\n                {operator: \"1\", className: \"key-1 col-4\"},\r\n                {operator: \"2\", className: \"key-2 col-4\"},\r\n                {operator: \"3\", className: \"key-3 col-4\"},\r\n                {operator: \"4\", className: \"key-4 col-4\"},\r\n                {operator: \"5\", className: \"key-5 col-4\"},\r\n                {operator: \"6\", className: \"key-6 col-4\"},\r\n                {operator: \"7\", className: \"key-7 col-4\"},\r\n                {operator: \"8\", className: \"key-8 col-4\"},\r\n                {operator: \"9\", className: \"key-9 col-4\"}\r\n            ],\r\n            operatorKeys: [\r\n                {operator: \"÷\", className: \"key-divide\"},\r\n                {operator: \"x\", className: \"key-multiply\"},\r\n                {operator: \"-\", className: \"key-subtract\"},\r\n                {operator: \"+\", className: \"key-add\"},\r\n                {operator: \"=\", className: \"key-equals\"}\r\n            ]\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    _onchangeHandler = (e) => {\r\n        let value = e.target.value === '' ? '0' : e.target.value;\r\n\r\n        // Check if input is number\r\n        const isNumber = /^\\d+$/.test(value);\r\n        if (!isNumber) {\r\n            return;\r\n        }\r\n\r\n        // Check if input is still in initial status\r\n        if (this.state.value === '0') {\r\n            value = value.split('').pop()\r\n        }\r\n\r\n        this.setState({\r\n            value: value\r\n        });\r\n    };\r\n\r\n    _onClickHandler = (operator) => {\r\n        const currentValue = this.state.value;\r\n\r\n        // Cancel all data or just current value\r\n        if ([\"AC\", \"C\"].includes(operator)) {\r\n            if (operator === 'C') {\r\n                this.setState({\r\n                    value: '0'\r\n                })\r\n            }\r\n\r\n            if (operator === 'AC') {\r\n                this.setState({\r\n                    value: '0',\r\n                    previousValue: null,\r\n                    operator: null,\r\n                    reset: false\r\n                })\r\n            }\r\n        }\r\n\r\n        // Function keys\r\n        if (this.state.functionKeys.find(element => element.operator === operator)) {\r\n            if (currentValue === '0') {\r\n                return;\r\n            }\r\n\r\n            let result = currentValue;\r\n\r\n            if (operator === '±') {\r\n                if (parseFloat(currentValue) < 0) {\r\n                    result = currentValue.substring(1, currentValue.length);\r\n                } else {\r\n                    result = \"-\" + currentValue;\r\n                }\r\n            }\r\n\r\n            if (operator === '%') {\r\n                const value = parseFloat(currentValue) / 100;\r\n                result = value.toString();\r\n            }\r\n\r\n            this.setState({\r\n                value: result\r\n            })\r\n        }\r\n\r\n        // Digit keys\r\n        if (this.state.digitKeys.find(element => element.operator === operator)) {\r\n            let value = operator;\r\n\r\n            if (value === '●') {\r\n                value = '.';\r\n            }\r\n\r\n            if (operator === '●' && currentValue.includes('.')) {\r\n                return;\r\n            }\r\n\r\n            // Check if input is still in initial status\r\n            if (currentValue !== '0' && !this.state.reset) {\r\n                value = currentValue + value;\r\n            }\r\n\r\n            if (currentValue === '0' && operator === '●') {\r\n                value = currentValue + value;\r\n            }\r\n\r\n            this.setState({\r\n                value: value,\r\n                reset: false\r\n            })\r\n        }\r\n\r\n        // Operation keys\r\n        if (this.state.operatorKeys.find(element => element.operator === operator)) {\r\n            // equal can't be trigger by empty operator\r\n            if (operator === \"=\" && this.state.operator === null) {\r\n                this.setState({\r\n                    reset: true\r\n                });\r\n                return;\r\n            }\r\n\r\n            let result;\r\n            const previousValue = this.state.previousValue;\r\n\r\n            // If no previous value push it to previous value\r\n            if (previousValue === null) {\r\n                this.setState({\r\n                    operator: operator,\r\n                    previousValue: currentValue,\r\n                    reset: true\r\n                });\r\n                return;\r\n            }\r\n\r\n            let prevNumber = parseFloat(previousValue);\r\n            let currentNumber = parseFloat(currentValue);\r\n            let needByPass = false;\r\n\r\n            if (prevNumber > 0 && prevNumber < 1 && currentNumber > 0 && currentNumber < 1) {\r\n                prevNumber = prevNumber * Math.pow(10, 5);\r\n                currentNumber = currentNumber * Math.pow(10, 5);\r\n                needByPass = true;\r\n            }\r\n\r\n            switch (this.state.operator) {\r\n                case '+':\r\n                    result = prevNumber + currentNumber;\r\n                    if (needByPass) {\r\n                        result = result / Math.pow(10, 5);\r\n                        needByPass = false;\r\n                    }\r\n                    break;\r\n                case '-':\r\n                    result = prevNumber - currentNumber;\r\n                    if (needByPass) {\r\n                        result = result / Math.pow(10, 5);\r\n                        needByPass = false;\r\n                    }\r\n                    break;\r\n                case 'x':\r\n                    result = prevNumber * currentNumber;\r\n                    if (needByPass) {\r\n                        result = result / Math.pow(10, 10);\r\n                        needByPass = false;\r\n                    }\r\n                    break;\r\n                case '÷':\r\n                    if (needByPass) {\r\n                        result = result / Math.pow(10, 10);\r\n                        needByPass = false;\r\n                    }\r\n                    result = prevNumber / currentNumber;\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n\r\n            result = result.toString();\r\n\r\n            this.setState({\r\n                value: result,\r\n                previousValue: operator === '=' ? null : result,\r\n                operator: operator === '=' ? null : operator,\r\n                reset: true\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const cancelButton = this.state.value === '0' ? \"AC\" : \"C\";\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"calculator\">\r\n\r\n                    <AutoScalingText\r\n                        changed={this._onchangeHandler}\r\n                        value={this.state.value} />\r\n\r\n                    <div className=\"calculator-keypad\">\r\n                        <div className=\"col-9 input-keys\">\r\n                            <div className=\"function-keys\">\r\n                                <CalculatorKey\r\n                                    className=\"col-4 key-clear\"\r\n                                    key={cancelButton}\r\n                                    click={() => this._onClickHandler(cancelButton)}\r\n                                    operator={cancelButton}/>\r\n                                {this.state.functionKeys.map((operator) =>\r\n                                    <CalculatorKey\r\n                                        className={operator.className}\r\n                                        key={operator.operator}\r\n                                        click={() => this._onClickHandler(operator.operator)}\r\n                                        operator={operator.operator}/>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"digit-keys\">\r\n                                {this.state.digitKeys.map((operator) =>\r\n                                    <CalculatorKey\r\n                                        className={operator.className}\r\n                                        key={operator.operator}\r\n                                        click={() => this._onClickHandler(operator.operator)}\r\n                                        operator={operator.operator}/>\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"col-3 operator-keys\">\r\n                            {this.state.operatorKeys.map((operator) =>\r\n                                <CalculatorKey\r\n                                    className={operator.className}\r\n                                    key={operator.operator}\r\n                                    click={() => this._onClickHandler(operator.operator)}\r\n                                    operator={operator.operator}/>\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n                <div>\r\n                    <br/>\r\n                    <p>Operation:\r\n                        <br/>\r\n                        Previous value: <b\r\n                            className=\"text-danger\">{this.state.previousValue === null ? \"null\" : this.state.previousValue}</b>\r\n                        <br/>\r\n                        Operator: <b\r\n                            className=\"text-danger\">{this.state.operator === null ? \"null\" : this.state.operator}</b>\r\n                        <br/>\r\n                        Current value: <b className=\"text-danger\">{this.state.value}</b></p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Calculator;","import React from 'react';\r\n\r\nconst _copyClickHandler = (character) => {\r\n    navigator.clipboard.writeText(character);\r\n    console.log(character, \"copyed\");\r\n};\r\n\r\nconst EmojiList = (props) => {\r\n    return (\r\n        <div className=\"emoji-container\">\r\n            {props.emojiList.map((emoji) => {\r\n                if (emoji.character !== \"🥲\" && !/\\d/.test(emoji.unicodeName)) {\r\n                    return <div key={emoji.unicodeName}>\r\n                        <button\r\n                            onClick={() => _copyClickHandler(emoji.character)}\r\n                            >{emoji.character}</button>\r\n                        <div className=\"copied-badge blue\">Copied</div>\r\n                    </div>\r\n                }\r\n                return null;\r\n            })}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmojiList;","import React from 'react';\r\n\r\nconst Spinner = () => {\r\n    return (\r\n        <div className=\"pswp__preloader__icn\">\r\n            <div className=\"pswp__preloader__cut\">\r\n                <div className=\"pswp__preloader__donut\"></div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Spinner;","import React from 'react';\r\nimport Spinner from \"./Spinner\";\r\n\r\nconst EmojiSearchBar = (props) => {\r\n    return (\r\n        <div>\r\n            <form className=\"input-group mb-3\">\r\n                <input\r\n                    value={props.value}\r\n                    onChange={props.changed}\r\n                    type=\"text\"\r\n                    className=\"form-control\"\r\n                    placeholder=\"Search emoji\"\r\n                    aria-label=\"Example text with button addon\"\r\n                    aria-describedby=\"button-addon1\" />\r\n                <button\r\n                    onClick={props.search}\r\n                    className=\"btn btn-outline-secondary\"\r\n                    type=\"submit\"\r\n                    id=\"button-addon1\">🔍</button>\r\n                {props.isLoaded ? null : <Spinner/>}\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EmojiSearchBar;","import React, {Component} from 'react';\r\n\r\n// Style\r\nimport './emojiSearch.css';\r\n\r\n// Components\r\nimport EmojiList from \"./components/EmojiList\";\r\nimport EmojiSearchBar from \"./components/EmojiSearchBar\";\r\n\r\nclass EmojiSearch extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            accessKey: \"&access_key=cb3024d39c7e7ab627e8fb7f38bd40d07116e664\",\r\n            emojiSearchUrl: \"https://emoji-api.com/emojis?search=\",\r\n            error: null,\r\n            isLoaded: true,\r\n            searched: false,\r\n            keyword: '',\r\n            searchResult: []\r\n        };\r\n        this._searchClickHandler = this._searchClickHandler.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n    }\r\n\r\n    _searchOnchangeHandler = (e) => {\r\n        this.setState({\r\n            keyword: e.target.value\r\n        });\r\n    };\r\n\r\n    async _searchClickHandler(e) {\r\n        e.preventDefault();\r\n        const searchUrl = this.state.emojiSearchUrl + this.state.keyword + this.state.accessKey;\r\n\r\n        await this.setState({\r\n            isLoaded: false,\r\n            searched: true\r\n        });\r\n\r\n        try {\r\n            const searchRes = await fetch(searchUrl);\r\n            const searchResult = await searchRes.json();\r\n\r\n            this.setState({\r\n                isLoaded: true,\r\n                searchResult: searchResult ? searchResult : []\r\n            })\r\n        } catch (error) {\r\n            this.setState({\r\n                isLoaded: true,\r\n                error\r\n            })\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const {error, isLoaded, searchResult, searched} = this.state;\r\n        let result = null;\r\n        const emojiNotFound = <p style={{textAlign: \"center\"}}><span style={{fontSize: \"2em\"}}>😥</span> Emoji not found</p>;\r\n        if (searched) {\r\n            result = searchResult.length === 0 ? emojiNotFound :\r\n                <EmojiList emojiList={searchResult}/>;\r\n        }\r\n\r\n        return (\r\n            <div className=\"emoji-search\">\r\n                <EmojiSearchBar\r\n                    isLoaded={isLoaded}\r\n                    value={this.state.keyword}\r\n                    changed={this._searchOnchangeHandler}\r\n                    search={this._searchClickHandler}/>\r\n                {isLoaded ? result : null}\r\n                {error ? <p>error</p> : null}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmojiSearch;","import React, {Component} from 'react';\r\n\r\nclass PlaygroundContainer extends Component {\r\n    state = {\r\n        notesToggle: false\r\n    };\r\n\r\n    // Below is way to cache data in browser using localstorage\r\n    // May not needed in this stage\r\n    // // Cache status\r\n    // componentDidMount() {\r\n    //     const item = localStorage.getItem(this.props.name);\r\n    //     if (item) {\r\n    //         const itemObject = JSON.parse(item);\r\n    //         const toggled = itemObject.notesToggle\r\n    //         console.log(toggled);\r\n    //         if (toggled !== this.state.notesToggle) {\r\n    //             this.setState({\r\n    //                 notesToggle: toggled\r\n    //             })\r\n    //         }\r\n    //     }\r\n    //     localStorage.setItem(this.props.name, JSON.stringify( {\"notesToggle\": this.state.notesToggle}));\r\n    //     console.log(\"[PlaygroundContainer.js] \", this.props.name);\r\n    // }\r\n    //\r\n    // // Cache status when updated\r\n    // componentDidUpdate(prevProps, prevState, snapshot) {\r\n    //     localStorage.setItem(this.props.name, JSON.stringify(this.state));\r\n    // }\r\n\r\n    _notesToggleHandler = (e) => {\r\n        if (e.target.className.includes(\"active\")) {\r\n            return;\r\n        }\r\n        const notesToggle = this.state.notesToggle;\r\n        this.setState({\r\n            notesToggle: !notesToggle\r\n        })\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div className={this.props.size}>\r\n                <div className=\"card shadow mb-4\">\r\n                    <div\r\n                        className=\"card-header py-3 d-flex flex-row align-items-center justify-content-between\">\r\n                        <h6 className=\"m-0 font-weight-bold text-primary\">{this.props.name}</h6>\r\n                        <ul className=\"nav nav-tabs card-header-tabs\">\r\n                            <li className=\"nav-item\">\r\n                                <button className={\"nav-link \" + (this.state.notesToggle ? \"\" : \"active\")}\r\n                                   onClick={this._notesToggleHandler}>{this.props.name}</button>\r\n                            </li>\r\n                            <li className=\"nav-item\">\r\n                                <button className={\"nav-link \" + (this.state.notesToggle ? \"active\" : \"\")}\r\n                                   onClick={this._notesToggleHandler}>Notes</button>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"card-body\">\r\n                        {this.state.notesToggle ? this.props.desc : this.props.children}\r\n                    </div>\r\n                    <div className=\"card-footer text-muted\">\r\n                        - Last update : {this.props.lastUpdate}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PlaygroundContainer;","import React from 'react';\r\nimport PlaygroundContainer from \"../PlaygroundContainer/PlaygroundContainer\";\r\n\r\nconst PlaygroundsContainer = (props) => {\r\n    return (\r\n        <div className=\"row\">\r\n            {props.playgrounds.map((playground) =>\r\n                <PlaygroundContainer\r\n                    key={playground.name}\r\n                    name={playground.name}\r\n                    desc={playground.desc}\r\n                    lastUpdate={playground.lastUpdate}\r\n                    size={playground.size}>\r\n                    {playground.playground}\r\n                </PlaygroundContainer>\r\n            )}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PlaygroundsContainer;","import React, {Component} from 'react';\r\n\r\n// Playgrounds\r\nimport TicTacToe from \"../../playgrounds/TicTacToe/TicTacToe\";\r\nimport Calculator from \"../../playgrounds/Calculator/Calculator\";\r\nimport EmojiSearch from \"../../playgrounds/EmojiSearch/EmojiSearch\";\r\n\r\n// Components\r\nimport PlaygroundsContainer from \"../PlaygroundsContainer/PlaygroundsContainer\";\r\n\r\nclass PageContentContainer extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            playgrounds: [\r\n                {\r\n                    name: \"Emoji Search\",\r\n                    desc: <p>Search emoji with words like Love or Smiling<br/>This emoji search tool uses API provided\r\n                        by emoji-api.com.<br/><a href=\"https://emoji-api.com/\">Visit Emoji API website →</a></p>,\r\n                    lastUpdate: \"20/06/2021\",\r\n                    size: \"col-xl-12 col-lg-12\",\r\n                    playground: <EmojiSearch/>\r\n                },\r\n                {\r\n                    name: \"Calculator\",\r\n                    desc: <div><p>Simple calculator like the one in iPhone<br/>Auto text scaling method is reference\r\n                        from codepen calculator project. Link: <a href=\"https://codepen.io/mjijackson/pen/xOzyGX\">codepen\r\n                            calculator →</a></p>\r\n                        <hr/>\r\n                        <p><b>Notes:</b><br/>18/06/2021 : Optimized calculator keys with React.memo() enclosed to\r\n                            prevent unnecessary re-rendering when each keys were pressed.</p></div>,\r\n                    lastUpdate: \"15/06/2021\",\r\n                    size: \"col-xl-6 col-lg-6\",\r\n                    playground: <Calculator/>\r\n                },\r\n                {\r\n                    name: \"Tic Tac Toe\",\r\n                    desc: <p>Tic Tac Toe game built by following React official tutorial. A great way to learn by doing.\r\n                        Link: <a href=\"https://reactjs.org/tutorial/tutorial.html\">Reactjs Tic Tac Toe tutorial →</a>\r\n                    </p>,\r\n                    lastUpdate: \"10/06/2021\",\r\n                    size: \"col-xl-6 col-lg-6\",\r\n                    playground: <TicTacToe/>\r\n                }\r\n            ]\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container-fluid\">\r\n                <div className=\"d-sm-flex align-items-center justify-content-between mb-4\">\r\n                    <h1 className=\"h3 mb-0 text-gray-800\">Playgrounds</h1>\r\n                </div>\r\n\r\n                <PlaygroundsContainer\r\n                    playgrounds={this.state.playgrounds}/>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\nexport default PageContentContainer;","import React, {Component} from 'react';\r\nimport './App.css';\r\nimport Sidebar from \"./components/Sidebar/Sidebar\";\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport PageContentContainer from \"./components/PageContentContainer/PageContentContainer\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"wrapper\">\r\n                <Sidebar />\r\n                <div id=\"content-wrapper\" className=\"d-flex flex-column\">\r\n                    <div id=\"content\">\r\n                        <Navbar />\r\n                        <PageContentContainer/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}